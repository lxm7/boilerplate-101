{"version":3,"sources":["pages/ShortestRoute/destinations.png","pages/ShoppingList/utils.tsx","pages/ShoppingList/reducer/index.ts","pages/ShoppingList/store.ts","pages/ShoppingList/actions/index.ts","components/PageTransition/index.tsx","components/HolyGrailLayout/index.tsx","pages/MovieList/api/index.ts","pages/MovieList/components/Checkbox/index.tsx","pages/MovieList/components/Grid/index.tsx","pages/MovieList/components/Film/index.tsx","pages/MovieList/utils/index.tsx","pages/MovieList/index.tsx","pages/ShortestRoute/components/Route/index.tsx","pages/ShortestRoute/utils/index.ts","pages/ShortestRoute/components/RouteList/index.tsx","pages/ShortestRoute/components/ToolTip/index.tsx","pages/ShortestRoute/components/RouteEnd/index.tsx","pages/ShortestRoute/constants.ts","pages/ShortestRoute/components/RouteGraph/index.tsx","pages/ShortestRoute/index.tsx","pages/ShoppingList/components/Item/index.tsx","pages/ShoppingList/components/ShopList/index.tsx","pages/ShoppingList/components/Basket/index.tsx","pages/ShoppingList/components/Select/index.tsx","pages/ShoppingList/components/Price/index.tsx","pages/ShoppingList/index.tsx","pages/Mapbox/utils.js","pages/Mapbox/index.js","pages/SunriseSunset/index.tsx","pages/SunriseSunset/usePosition.ts","pages/SunriseSunset/utils.ts","pages/SimpleExpressForm/input.js","pages/SimpleExpressForm/error.js","pages/SimpleExpressForm/constants.js","pages/SimpleExpressForm/utils/index.js","pages/SimpleExpressForm/useForm/index.js","pages/SimpleExpressForm/index.js","pages/MobileBeerApp/Modal.js","pages/MobileBeerApp/ShoppingDrawer.js","pages/MobileBeerApp/GridList.js","pages/MobileBeerApp/index.js","pages/index.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","transformRateObj","rates","Object","entries","map","row","country","amount","fetchCurrencies","a","base","axios","get","response","data","ratesWithSeparateKeys","Error","message","roundToTwo","value","Math","round","getTotal","list","reduce","acc","item","Number","price","findSelectedCurrency","current","find","rate","initialState","basketList","allCurrencies","total","devTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleWares","applyMiddleware","thunk","store","createStore","state","action","type","loading","payload","slice","index","event","target","dispatch","GlobalStyle","createGlobalStyle","PageTransition","pageKey","classNames","timeout","children","TransitionGroup","childFactory","child","React","cloneElement","CSSTransition","key","addEndListener","Wrapper","styled","div","Body","Side","Main","HolyGrailSide","HolyGrailMain","memo","BASE_URL","handleError","promise","then","undefined","catch","error","Promise","resolve","genre","handleOnChangeFilter","checked","className","name","id","toString","onChange","GridCell","Film","movie","getMovieGenreIds","useMemo","genre_ids","join","title","src","poster_path","loader","style","width","minHeight","background","display","alignItems","justifyContent","color","height","unloader","isChecked","n","selectedFn","availableGenres","R","selectedGenreIdsFn","genres","genresInListFn","nowPlaying","curr","joinAvailableGenreNamesFn","genresInList","App","availableGenreNames","updatedList","fetchFilters","setState","e","prevState","updatePlayingList","selected","selectedGenreIds","fetchList","length","this","fetchData","process","genresErr","nowPlayingErr","results","href","Grid","sort","b","popularity","Component","stops","distance","stop","i","marginRight","appendRouteToAllPossibleRoutes","newRoutes","allRoutes","newRoute","push","buildRoutePath","route","start","weight","concat","findAllRoutes","graph","end","prototype","hasOwnProperty","call","allroutes","node","nodeEdge","includes","newroutes","utils","isActiveStop","position","activeState","getDistance","getObjectKeyAsValue","transformRoutes","routesRaw","filter","isNaN","RouteList","routes","Route","toolTipStyle","textAlign","bottom","left","padding","optionStyle","borderRadius","marginBottom","ToolTip","onClickRouteEnd","onClick","isActive","active","RouteEnd","toggleToolTip","toolTip","adjacencyGraph","A","B","C","D","E","F","G","H","RouteGraph","fastest","edge","path","getCurrentPath","from","to","borderColor","matrix","require","persist","updateRoutes","getFastestRoute","preventDefault","maxWidth","alt","Item","addItemOnClick","removeItemOnClick","foodItems","Select","options","handleOnChange","PriceArea","totalIncRate","updateCurrency","connect","addItemOnClickFn","removeItemOnClickFn","handleCheckoutFn","updateCurrencyFn","useEffect","Price","updatePercentiles","featureCollection","accessor","features","scale","scaleQuantile","domain","range","f","properties","percentile","dataLayer","paint","property","year","hoveredFeature","viewport","latitude","longitude","zoom","bearing","pitch","_loadData","income","_updateSettings","_onViewportChange","_onHover","srcEvent","offsetX","offsetY","layer","x","y","requestJson","top","right","zIndex","mapStyle","onViewportChange","mapboxApiAccessToken","onHover","_renderTooltip","useState","setPosition","setError","coords","onError","geo","navigator","geolocation","watcher","watchPosition","clearWatch","usePosition","SunCalc","getTimes","Date","getSunriseSunset","sunrise","sunset","toFixed","Input","validation","htmlFor","formData","values","email","newsletter","errors","meta","isSubmitting","submitMessage","ERROR","FIELD","isNewsletterField","inputName","getError","eventTarget","validator","isEmpty","isEmail","validate","obj","object","every","o","everyPropertyIsEmpty","useForm","callback","localErrors","setLocalErrors","keys","handleSubmit","fetch","method","headers","body","JSON","stringify","post","console","info","onSubmit","marginTop","getModalStyle","transform","useStyles","makeStyles","theme","paper","backgroundColor","palette","border","boxShadow","shadows","spacing","beerImg","maxHeight","SimpleModal","beer","open","handleClose","addToCart","classes","modalStyle","Modal","onClose","aria-labelledby","aria-describedby","image_url","description","tagline","abv","food_pairing","shoppingTab","ShoppingDrawer","items","removeFromCart","toggleDrawer","Button","Drawer","anchor","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","Divider","variant","component","root","flexGrow","text","secondary","beerImgWrapper","GridList","beerList","handleOpen","isLoading","CircularProgress","container","margin","xs","Box","fontSize","DRINK_TABS","0","1","2","getTabNameFromTabIndex","getTabIndices","tabs","BeerApp","setIsLoading","page","setPage","gridRef","useRef","setBeerList","foodTab","setFoodTab","setIndex","mainTabIndex","setMainTabIndex","showBeer","setShowBeer","shoppingItems","setShoppingItems","wait","toLowerCase","res","json","fetchApi","Tabs","fullwidth","centered","Tab","icon","aria-label","onChangeIndex","ref","label","newItems","Index","Boolean","location","hostname","match","titles","makeRoute","replace","HolyGrailLayout","render","nanoid","exact","Home","MobileBeerApp","ShoppingList","ShortestRoute","MovieList","Mapbox","SunriseSunset","SimpleExpressForm","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.805df404.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/destinations.4430fc75.png\";","import axios from \"axios\";\n\nimport { RateT, ItemT } from \"./types\";\n\nexport type APIData = {\n  rates: RateT[];\n  base: string;\n  date: string;\n};\n\n/**\n * function transformRateObj\n *\n * @param {object} rates list of currency rates\n * @return {object} Converts rates object to have a key for each value\n *\n */\nexport const transformRateObj = (rates: RateT[]) =>\n  Object.entries(rates).map(row => ({ country: row[0], amount: row[1] }));\n\n/**\n * function fetchCurrencies.\n *\n * @param {string} country - Optional string param to set base\n * @return {object} Resolved api call with currency rates\n * @throws {Error} Throws error on catch\n *\n */\nexport const fetchCurrencies = async (country?: string) => {\n  const base = country || \"GBP\";\n\n  try {\n    const response = await axios.get(\n      `https://api.exchangeratesapi.io/latest?base=${base}`\n    );\n    const { rates } = response.data;\n    const ratesWithSeparateKeys = transformRateObj(rates);\n\n    return { ...response.data, rates: [...ratesWithSeparateKeys] } as APIData;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n/**\n * function roundToTwo\n *\n * @param {string} num value of a price\n * @return {number} rounded number for currency\n *\n */\nexport const roundToTwo = (value: number) =>\n  +(Math.round(((value + \"e+2\") as unknown) as number) + \"e-2\");\n\n/**\n * function getTotal\n *\n * @param {array} list - list of items\n * @return {number} Total price\n *\n */\nexport const getTotal = (list: ItemT[]) =>\n  list.reduce((acc: number, item: ItemT) => acc + Number(item.price), 0);\n\n/**\n * function findSelectedCurrency\n *\n * @param {array} rates list of currency rates\n * @param {string} current selected country e.g, \"GBP\"\n * @return {object} Returns the selected currency object with country and exchange amount\n *\n */\nexport const findSelectedCurrency = (rates: RateT[], current: string) =>\n  rates.find(rate => rate.country === current);\n","import React from \"react\";\nimport { RateT, IState, ItemT } from \"../types\";\n\nimport { findSelectedCurrency, roundToTwo, getTotal } from \"../utils\";\n\ntype Actions =\n  | { type: \"FETCH_API_INIT\" }\n  | { type: \"FETCH_API_FAILURE\" }\n  | { type: \"FETCH_API_SUCCESS\"; payload: RateT[] }\n  | { type: \"ADD_ITEM\"; item: ItemT }\n  | { type: \"REMOVE_ITEM\"; index: number }\n  | { type: \"HANDLE_CHECKOUT\" }\n  | { type: \"UPDATE_CURRENCY\"; event: React.ChangeEvent<HTMLSelectElement> };\n\nconst initialState: IState = {\n  basketList: [],\n  allCurrencies: [],\n  rate: {\n    country: \"GBP\",\n    amount: \"1\"\n  },\n  total: 0\n};\n\nexport const rootReducer = (state = initialState, action: Actions) => {\n  switch (action.type) {\n    case \"FETCH_API_INIT\":\n      return {\n        ...state,\n        loading: true\n      };\n\n    case \"FETCH_API_SUCCESS\":\n      return {\n        ...state,\n        allCurrencies: action.payload,\n        loading: false\n      };\n\n    case \"FETCH_API_FAILURE\":\n      return {\n        ...state,\n        loading: false\n      };\n\n    case \"ADD_ITEM\":\n      return {\n        ...state,\n        basketList: [...state.basketList, { ...action.item }]\n      };\n\n    case \"REMOVE_ITEM\":\n      return {\n        ...state,\n        basketList: [\n          ...state.basketList.slice(0, action.index),\n          ...state.basketList.slice(action.index + 1)\n        ]\n      };\n\n    case \"HANDLE_CHECKOUT\":\n      return {\n        ...state,\n        total: roundToTwo(getTotal(state.basketList) as number)\n      };\n\n    case \"UPDATE_CURRENCY\":\n      return {\n        ...state,\n        rate: {\n          ...findSelectedCurrency(\n            state.allCurrencies,\n            action.event.target.value\n          )\n        } as RateT\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { fetchAllCurrencies } from \"./actions\";\nimport { rootReducer } from \"./reducer\";\n\nconst devTools =\n  ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n  compose;\n\nconst middleWares = compose(\n  applyMiddleware(thunk),\n  devTools || ((a: any) => a)\n);\n\nconst store = createStore(rootReducer, middleWares);\nstore.dispatch<any>(fetchAllCurrencies());\n\nexport default store;\n","import { Action } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\n\nimport { IState, ItemT } from \"../types\";\nimport { fetchCurrencies, APIData } from \"../utils\";\n\nexport const addItemOnClick = (item: ItemT) => ({ type: \"ADD_ITEM\", item });\n\nexport const removeItemOnClick = (index: number) => ({\n  type: \"REMOVE_ITEM\",\n  index\n});\n\nexport const handleCheckout = () => ({ type: \"HANDLE_CHECKOUT\" });\n\nexport const updateCurrency = (\n  event: React.ChangeEvent<HTMLSelectElement>\n) => ({ type: \"UPDATE_CURRENCY\", event });\n\nexport const fetchAllCurrencies = (): ThunkAction<\n  void,\n  IState,\n  null,\n  Action<string>\n> => {\n  const didCancel = false;\n\n  return async dispatch => {\n    dispatch({ type: \"FETCH_API_INIT\" });\n\n    try {\n      const data: APIData = await fetchCurrencies(\"GBP\");\n      if (!didCancel) {\n        dispatch({ type: \"FETCH_API_SUCCESS\", payload: data.rates });\n      }\n    } catch (error) {\n      if (!didCancel) {\n        dispatch({ type: \"FETCH_API_FAILURE\" });\n      }\n    }\n  };\n};\n","import React, { ReactNode } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst transitionClassName = \"slide\";\nconst duration = 200;\nconst slidePercent = 10;\n\nconst GlobalStyle = createGlobalStyle`\n.${transitionClassName}-enter {\n  opacity: 0;\n  transform: translateX(${slidePercent}%);\n\n  /* add flag for styled components for overlapp? */\n  position: relative;\n  z-index: 1;\n}\n.${transitionClassName}-enter-active {\n  opacity: 1;\n  transform: translateX(0%);\n}\n.${transitionClassName}-exit {\n  opacity: 1;\n  transform: translateX(0%);\n\n  /* add flag for styled components for absolute overlapp? */\n  position: absolute;\n  top: 0;\n  z-index: 0;\n\n  /* keep page exactly the same whilst sliding out\n  with full width and offset nav width on desktop */\n  width: 100%;\n  left: 192px;\n}\n.${transitionClassName}-exit-active {\n  opacity: 0;\n  transform: translateX(-${slidePercent}%);\n}\n.${transitionClassName}-enter-active,\n.${transitionClassName}-exit-active {\n  transition: all ${duration}ms cubic-bezier(0.390, 0.575, 0.565, 1.000); /* easeOutSine */\n}\n`;\n\ninterface PageTransition {\n  pageKey: string;\n  classNames: string;\n  timeout: number;\n  children: ReactNode;\n}\n\nconst PageTransition = ({\n  pageKey,\n  classNames,\n  timeout,\n  children\n}: PageTransition) => {\n  return (\n    <>\n      <GlobalStyle />\n      <TransitionGroup\n        childFactory={child =>\n          React.cloneElement(child, {\n            classNames,\n            timeout\n          })\n        }\n      >\n        <CSSTransition key={pageKey} addEndListener={() => null}>\n          <div>{children}</div>\n        </CSSTransition>\n      </TransitionGroup>\n    </>\n  );\n};\n\nexport default PageTransition;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\n/* Grid layout - https://philipwalton.github.io/solved-by-flexbox/demos/holy-grail/ */\n\nconst Wrapper = styled.div`\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    flex: 1;\n  }\n`;\n\nconst Body = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    flex: 1;\n  }\n`;\n\nconst Side = styled.div`\n  flex: 0 0 16em;\n  /* Put on left side */\n  order: -1;\n\n  @media (min-width: 768px) {\n    /* 16em is the width of the columns */\n    flex: 0 0 16em;\n  }\n`;\n\nconst Main = styled.div`\n  flex: 1;\n`;\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst HolyGrail: React.SFC<Props> = ({ children }: Props) => (\n  <Wrapper>\n    <Body>{children}</Body>\n  </Wrapper>\n);\n\nexport const HolyGrailSide: React.SFC<Props> = ({ children }: Props) => (\n  <Side>{children}</Side>\n);\n\nexport const HolyGrailMain: React.SFC<Props> = ({ children }: Props) => (\n  <Main>{children}</Main>\n);\n\nexport default React.memo(HolyGrail);\n","import axios from \"axios\";\n\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\n\n// eslint-disable-next-line\nexport interface IAxiosResponse<T = any> extends Promise<T> {}\n\n// Allows use to pass in our errors for requests in a reuasable way so its implemented\n// in hooks fashion. `const [nowPlaying, nowPlayingErr] = await handleError(getNowPlaying())`\nexport const handleError = (promise: Promise<IAxiosResponse<object>>) => {\n  return promise\n    .then(data => [data, undefined])\n    .catch(error => Promise.resolve([undefined, error]));\n};\n\nexport const getNowPlaying = () =>\n  axios.get(\n    `${BASE_URL}/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}`\n  );\n\nexport const getGenres = () =>\n  axios.get(\n    `${BASE_URL}/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}`\n  );\n","import React from \"react\";\n\nimport { Genre } from \"../..\";\nimport \"./styles.css\";\n\ntype CheckboxProps = {\n  genre: Genre;\n  handleOnChangeFilter: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  checked: boolean | undefined;\n};\n\nconst Checkbox: React.SFC<CheckboxProps> = ({\n  genre,\n  handleOnChangeFilter,\n  checked = false\n}: CheckboxProps) => (\n  <label className=\"filter__label\">\n    {genre.name}\n\n    <input\n      className=\"filter__checkbox\"\n      id={genre.id.toString()}\n      name={genre.name}\n      type=\"checkbox\"\n      checked={checked}\n      onChange={handleOnChangeFilter}\n    />\n  </label>\n);\n\nexport default React.memo(Checkbox);\n","import React, { ReactNode } from \"react\";\n\nimport \"./styles.css\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst GridContainer: React.SFC<Props> = ({ children }: Props) => (\n  <ul className=\"listing Grid Grid--gutters Grid--full large-Grid--fit\">\n    {children}\n  </ul>\n);\n\nexport const GridCell: React.SFC<Props> = ({ children }: Props) => (\n  <li className=\"Grid-cell\">{children}</li>\n);\n\nexport default React.memo(GridContainer);\n","import React, { useMemo } from \"react\";\nimport Img from \"react-image\";\nimport Loader from \"react-loader-spinner\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport type Movie = {\n  adult: boolean;\n  backdrop_path: string;\n  genre_ids: number[];\n  id: number;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n};\n\ntype FilmProps = {\n  movie: Movie;\n};\n\nconst BASE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nconst Film: React.SFC<FilmProps> = ({ movie }: FilmProps) => {\n  const getMovieGenreIds = useMemo(() => movie.genre_ids.join(\"/\"), [\n    movie.genre_ids\n  ]);\n\n  return (\n    <div className=\"listing__content\">\n      <h2 className=\"h2\">{movie.title}</h2>\n\n      <p>{`Movie Genres: ${getMovieGenreIds}`}</p>\n      <Img\n        src={`${BASE_URL}${movie.poster_path}`}\n        loader={\n          <div\n            style={{\n              width: \"100%\",\n              minHeight: \"190px\",\n              background: \"#ddd\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <Loader type=\"TailSpin\" color=\"gray\" height={40} width={40} />\n          </div>\n        }\n        unloader={\n          <div\n            style={{\n              width: \"100%\",\n              minHeight: \"150px\",\n              background: \"#ccc\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          />\n        }\n      />\n    </div>\n  );\n};\n\nexport default Film;\n","import * as R from \"ramda\";\nimport { Genre } from \"..\";\nimport { Movie } from \"../components/Film\";\n\nexport const isChecked = (n: Genre) => n.isChecked as boolean;\n\nexport const selectedFn = (availableGenres: Genre[]) =>\n  R.filter(isChecked, availableGenres);\n\nexport const selectedGenreIdsFn = (genres: Genre[]) =>\n  R.map(R.prop(\"id\"), genres);\n\nexport const genresInListFn = (nowPlaying = [] as Movie[]) =>\n  R.reduce(\n    (acc, curr) => R.uniq([...acc, ...curr.genre_ids]) as number[],\n    [] as number[],\n    nowPlaying\n  );\n\nexport const joinAvailableGenreNamesFn = (\n  genres: Genre[] = [],\n  genresInList = [] as number[]\n) => R.innerJoin((genre, id) => genre.id === id, genres, genresInList);\n","import React, { Component } from \"react\";\nimport * as R from \"ramda\";\n\nimport \"./App.css\";\n\nimport { getGenres, getNowPlaying, handleError } from \"./api\";\nimport Checkbox from \"./components/Checkbox\";\nimport Grid, { GridCell } from \"./components/Grid\";\nimport Film, { Movie } from \"./components/Film\";\nimport {\n  selectedFn,\n  selectedGenreIdsFn,\n  genresInListFn,\n  joinAvailableGenreNamesFn\n} from \"./utils\";\n\nexport type Genre = {\n  id: number;\n  name: string;\n  isChecked?: boolean;\n};\n\ninterface IState {\n  genres: Genre[];\n  nowPlaying: Movie[];\n  availableGenreNames: Genre[];\n  updatedList: Movie[];\n}\n\nclass App extends Component<{}, IState> {\n  state = {\n    genres: [],\n    nowPlaying: [],\n    availableGenreNames: [],\n    updatedList: []\n  };\n\n  async componentDidMount() {\n    // TODO promise chain order?\n    await this.fetchData();\n    this.fetchFilters();\n  }\n\n  async fetchData() {\n    const [genres, genresErr] = await handleError(getGenres());\n    const [nowPlaying, nowPlayingErr] = await handleError(getNowPlaying()); // Todo - reduce down copy of for genresInList\n\n    if (genresErr) {\n      throw new Error(\"Could not fetch genres\");\n    }\n    if (nowPlayingErr) {\n      throw new Error(\"Could not fetch playing list\");\n    }\n\n    this.setState({\n      genres: genres.data.genres,\n      nowPlaying: nowPlaying.data.results\n    });\n  }\n\n  fetchFilters = () => {\n    const genresInList = (genresInListFn(\n      this.state.nowPlaying\n    ) as number[]) as [];\n    const availableGenreNames = joinAvailableGenreNamesFn(\n      this.state.genres,\n      genresInList\n    );\n\n    this.setState({ availableGenreNames });\n  };\n\n  handleOnChangeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const item = e.target.id;\n    const isChecked = e.target.checked;\n\n    this.setState(\n      (prevState: IState) => ({\n        availableGenreNames: [\n          ...prevState.availableGenreNames.map(genre => {\n            return genre.id === +item ? { ...genre, isChecked } : genre;\n          })\n        ]\n      }),\n      () => this.updatePlayingList()\n    );\n  };\n\n  updatePlayingList = () => {\n    const selected = selectedFn(this.state.availableGenreNames) as Genre[];\n    const selectedGenreIds = selectedGenreIdsFn(selected);\n\n    const hasMatchingGenres = (n: Movie) =>\n      R.length(R.intersection(selectedGenreIds, n.genre_ids as number[])) > 0;\n    const updatedList = R.filter(hasMatchingGenres, this.state.nowPlaying);\n\n    this.setState({ updatedList });\n  };\n\n  // TODO - should be one state domain.\n  fetchList = () =>\n    this.state.updatedList.length === 0\n      ? this.state.nowPlaying\n      : this.state.updatedList;\n\n  render() {\n    // TODO - create a render prop that handles data fetching\n    if (!this.state.nowPlaying || this.state.nowPlaying.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"filters\">\n          <form>\n            {this.state.availableGenreNames.length === 0 && (\n              <div>\n                Please set up an API key{\" \"}\n                <a href=\"https://www.themoviedb.org/settings/api\">here</a> and\n                add to a .env file, as per .env.example.\n              </div>\n            )}\n\n            {this.state.availableGenreNames.map((genre: Genre) => (\n              <Checkbox\n                key={genre.id}\n                genre={genre}\n                handleOnChangeFilter={this.handleOnChangeFilter}\n                checked={genre.isChecked}\n              />\n            ))}\n          </form>\n        </div>\n\n        <Grid>\n          {this.fetchList()\n            .sort((a: Movie, b: Movie) => b.popularity - a.popularity)\n            .map((movie: Movie) => (\n              <GridCell key={movie.id}>\n                <Film movie={movie} />\n              </GridCell>\n            ))}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nexport type RoutePlanProps = {\n  stops: string[];\n  distance: number;\n};\n\nconst RoutePlan: React.SFC<RoutePlanProps> = ({ stops, distance }) => (\n  <div className=\"route\">\n    {stops.map((stop, i) => (\n      <span style={{ marginRight: \"0.5em\" }} key={i}>\n        <span>{stop}</span>\n      </span>\n    ))}\n\n    <span className=\"route__distance\">Distance: {distance} </span>\n  </div>\n);\n\nexport default React.memo(RoutePlan);\n","import * as R from \"ramda\";\n\nimport {\n  IAdjacencyGraph,\n  RouteOption,\n  Edge,\n  Stop,\n  Route,\n  Entity\n} from \"../constants\";\nimport { IState, StopIsActive } from \"..\";\nimport * as utils from \"./\";\n\n/*\n * Function appendRouteToAllPossibleRoutes - Accumulates generated routes and queues them up into our list of\n * possible routes\n *\n * @param {array} newRoutes array of strings (destination letters)\n * @param {array} allRoutes\n * @return {array} returns an array of arrays of newRoutes\n */\nexport const appendRouteToAllPossibleRoutes = (\n  newRoutes: RouteOption[],\n  allRoutes: RouteOption[]\n) => newRoutes.map((newRoute: RouteOption) => allRoutes.push(newRoute));\n\n/*\n * Function buildRoutePath - Accumulates start points for each stop and builds a given route\n *\n * @param {array} route - accumulation of stops\n * @param {string} start - start destination for subsequent stop\n * @return {array} returns an array of arrays of newRoutes\n */\nexport const buildRoutePath = (route: Route, start: Stop, weight?: number) =>\n  route.concat([start], [weight as number]);\n\n/*\n * Function findAllRoutes - Takes several params, introspects routeGraph and gathers all possible routes\n * between selected start and end\n *\n * @param {object} routeGraph - a lookup to show all possible edges to each key'd node\n * @param {string} start - selected node e.g, \"C\"\n * @param {string} end - selected node e.g, \"D\"\n * @param {array} path - current path of nodes to get to our destination\n * @return {array} returns an array of arrays that can take us from C to D for example\n */\nexport const findAllRoutes = (\n  graph: IAdjacencyGraph,\n  start: Stop,\n  end: Stop,\n  route = [] as Route,\n  weight?: number\n) => {\n  // build route with each recursive start point\n  route = buildRoutePath(route, start, weight);\n  // if our start route/letter is also at the end return current route\n  if (start === end) {\n    return [route];\n  }\n\n  // If we enter a start route/letter that doesn't exist\n  if (!Object.prototype.hasOwnProperty.call(graph, start)) {\n    return [`The start route string \"${start}\" does not exist in route table`];\n  }\n\n  // If we enter an end route/letter that doesn't exist\n  if (!Object.prototype.hasOwnProperty.call(graph, end)) {\n    return [`The end route string \"${end}\" does not exist in route table`];\n  }\n\n  const allroutes: RouteOption[] = [];\n\n  graph[start].map((node: Edge) => {\n    const nodeEdge: string = node.node;\n\n    if (route.includes(nodeEdge)) {\n      return [];\n    }\n\n    const newroutes = utils.findAllRoutes(\n      graph,\n      nodeEdge as Stop,\n      end,\n      route,\n      node.weight\n    ) as [];\n    return appendRouteToAllPossibleRoutes(newroutes, allroutes);\n  });\n\n  return allroutes;\n};\n\n/*\n * Function activeStop\n *\n * @param {node} node\n * @param {string} position\n * @param {object} activeState\n * @return {boolean}\n */\nexport const isActiveStop = (\n  node: string,\n  position: string,\n  activeState: IState[\"active\"]\n) =>\n  R.hasPath([position, node], {\n    ...activeState\n  });\n\n/*\n * Function distance\n *\n * @param {array} fastestRoute\n * @return {number}\n */\nexport const getDistance = (route: Route) => R.last(route);\n\n/*\n * Function stops\n *\n * @param {array} fastestRoute\n * @return {array} list of stops without the distance at the end\n */\nexport const getStops = (route: Route) => R.dropLast(1, route);\n\n/*\n * Function path\n *\n * @param {array} fastestRoute\n * @param {edge} edge\n * @return {array} list of stops without the distance at the end\n */\nexport const getCurrentPath = (route: Route, node: string, edge: Edge) =>\n  R.intersection(route, [node, edge.node]);\n\n/*\n * Function getObjectKeyAsValue\n *\n * @param {Stop} stop\n * @return {string}\n */\nexport const getObjectKeyAsValue = (stop: StopIsActive) => R.keys(stop)[0];\n\n/*\n * Function transformRoutes\n *\n * @param {Stop} routesRaw\n * @return {array}\n */\nexport const transformRoutes = (routesRaw: Route[]) => {\n  return routesRaw.reduce((acc: Route[], curr: Route) => {\n    const distance = R.sum(\n      curr.filter((n: Entity) => !isNaN(n as number)) as any\n    );\n    const stops = curr.filter((n: Entity) => n && isNaN(n as number));\n    const row = stops.concat(distance);\n    return [...acc, row];\n  }, []);\n};\n","import React from \"react\";\n\nimport Route from \"../Route\";\nimport { getDistance, getStops } from \"../../utils\";\nimport { Route as RouteType, Stop } from \"../../constants\";\n\ntype RouteListProps = {\n  routes: RouteType[];\n};\n\nconst RouteList: React.SFC<RouteListProps> = ({ routes }: RouteListProps) => (\n  <div>\n    <h3>Possible routes:</h3>\n\n    <div className=\"route__list\">\n      {routes\n        .sort(\n          (a: RouteType, b: RouteType) =>\n            (getDistance(a) as number) - (getDistance(b) as number)\n        )\n        .map((row: RouteType, i: number) => (\n          <Route\n            key={i}\n            stops={getStops(row) as Stop[]}\n            distance={getDistance(row) as number}\n          />\n        ))}\n    </div>\n  </div>\n);\n\nexport default RouteList;\n","import React from \"react\";\nimport { Stop } from \"../../constants\";\n\nexport type RouteListProps = {\n  stop: Stop;\n  onClickRouteEnd: (\n    e: React.MouseEvent<HTMLSpanElement>,\n    stop: Stop,\n    position: string\n  ) => void;\n};\n\n// TODO use package `typestyle` hack a type to handle nested styles object\nconst toolTipStyle: React.CSSProperties = {\n  background: \"#eee\",\n  width: \"100px\",\n  textAlign: \"center\",\n  color: \"white\",\n  position: \"absolute\",\n  bottom: \"49px\",\n  left: \"100%\",\n  padding: \".5em\"\n};\n\nconst optionStyle: React.CSSProperties = {\n  background: \"#ff5a5f\",\n  display: \"block\",\n  borderRadius: \"3px\",\n  padding: \".5em\",\n  marginBottom: \"0.3em\"\n};\n\nconst ToolTip: React.SFC<RouteListProps> = ({\n  onClickRouteEnd,\n  stop\n}: RouteListProps) => (\n  <div style={toolTipStyle}>\n    {[\"start\", \"end\"].map(position => (\n      <span\n        style={optionStyle}\n        key={position}\n        onClick={e => onClickRouteEnd(e, stop, position)}\n      >\n        {position}\n      </span>\n    ))}\n  </div>\n);\n\nexport default ToolTip;\n","import React from \"react\";\n\nimport ToolTip from \"../ToolTip\";\nimport { StopIsActive } from \"../..\";\nimport { Stop } from \"../../constants\";\n\nimport \"./styles.css\";\n\nconst isActive = (active: boolean) => (active ? \"route__option--active\" : \"\");\n\nexport type RouteEndProps = {\n  stop: Stop;\n  active: boolean;\n  toggleToolTip: (e: React.MouseEvent<HTMLSpanElement>, stop: Stop) => void;\n  onClickRouteEnd: (\n    e: React.MouseEvent<HTMLSpanElement>,\n    stop: Stop,\n    position: string\n  ) => void;\n  toolTip: StopIsActive;\n};\n\nconst RouteEnd: React.SFC<RouteEndProps> = ({\n  stop,\n  onClickRouteEnd,\n  active,\n  toggleToolTip,\n  toolTip\n}: RouteEndProps) => (\n  <div\n    className={`route__option route__option--${stop} ${isActive(active)}`}\n    onClick={e => toggleToolTip(e, stop)}\n  >\n    {stop}\n\n    {toolTip && toolTip[stop] && (\n      <ToolTip onClickRouteEnd={onClickRouteEnd} stop={stop} />\n    )}\n  </div>\n);\n\nexport default RouteEnd;\n","export type Edge = {\n  node: string;\n  weight: number;\n};\n\nexport type IAdjacencyGraph = {\n  [key in string]: Edge[];\n};\n\nexport const adjacencyGraph: IAdjacencyGraph = {\n  A: [{ node: \"C\", weight: 2 }],\n  B: [\n    { node: \"D\", weight: 4 },\n    { node: \"E\", weight: 7 }\n  ],\n  C: [\n    { node: \"A\", weight: 2 },\n    { node: \"D\", weight: 1 },\n    { node: \"F\", weight: 4 }\n  ],\n  D: [\n    { node: \"C\", weight: 1 },\n    { node: \"B\", weight: 4 },\n    { node: \"F\", weight: 1 },\n    { node: \"G\", weight: 2 }\n  ],\n  E: [\n    { node: \"B\", weight: 7 },\n    { node: \"H\", weight: 10 }\n  ],\n  F: [\n    { node: \"C\", weight: 4 },\n    { node: \"D\", weight: 1 },\n    { node: \"G\", weight: 3 }\n  ],\n  G: [\n    { node: \"D\", weight: 2 },\n    { node: \"F\", weight: 3 },\n    { node: \"H\", weight: 4 }\n  ],\n  H: [\n    { node: \"G\", weight: 4 },\n    { node: \"E\", weight: 10 }\n  ]\n};\n\nexport type Stop = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\";\n\nexport type RouteOption = {\n  [key in Stop]: string;\n};\n\nexport type Entity = string | number | symbol;\n\nexport type Route = Entity[];\n","import React from \"react\";\nimport LineTo from \"react-lineto\";\nimport * as R from \"ramda\";\n\nimport RouteEnd from \"../RouteEnd\";\nimport {\n  isActiveStop,\n  getCurrentPath,\n  getDistance,\n  getObjectKeyAsValue\n} from \"../../utils\";\nimport { Edge, adjacencyGraph, Stop } from \"../../constants\";\nimport { IState } from \"../..\";\n\nexport type RouteGraphProps = {\n  active: IState[\"active\"];\n  fastest: IState[\"fastest\"];\n  toolTip: IState[\"toolTip\"];\n  toggleToolTip: (e: React.MouseEvent<HTMLSpanElement>, stop: Stop) => void;\n  onClickRouteEnd: (\n    e: React.MouseEvent<HTMLSpanElement>,\n    stop: Stop,\n    position: string\n  ) => void;\n};\n\nconst RouteGraph: React.SFC<RouteGraphProps> = ({\n  active,\n  fastest,\n  toolTip,\n  toggleToolTip,\n  onClickRouteEnd\n}: RouteGraphProps) => (\n  <div className=\"route__graph\">\n    <h3>\n      Start {getObjectKeyAsValue(active.start)} - End{\" \"}\n      {getObjectKeyAsValue(active.end)}\n    </h3>\n    <h3>Shortest distance: {getDistance(fastest)}</h3>\n\n    {R.keys(adjacencyGraph).map((node: string) => {\n      return (\n        <div key={node} style={{ position: \"relative\" }}>\n          <RouteEnd\n            stop={node as Stop}\n            active={\n              isActiveStop(node, \"start\", active) ||\n              isActiveStop(node, \"end\", active)\n            }\n            toggleToolTip={toggleToolTip}\n            onClickRouteEnd={onClickRouteEnd}\n            toolTip={toolTip}\n          />\n\n          {adjacencyGraph[node].map((edge: Edge, i: number) => {\n            const path = getCurrentPath(fastest, node, edge) as Stop[];\n            if (path.length === 0) {\n              return null;\n            }\n\n            return (\n              <div key={i}>\n                <LineTo\n                  className=\"route__edge\"\n                  from={`route__option--${path && path[0]}`}\n                  to={`route__option--${path && path[1]}`}\n                  borderColor={\"#9EFFE4\"}\n                />\n                {/* <span>{edge.weight}</span> */}\n              </div>\n            );\n          })}\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport default RouteGraph;\n","import React, { Component } from \"react\";\nimport * as R from \"ramda\";\n\nimport RouteList from \"./components/RouteList\";\nimport RouteGraph from \"./components/RouteGraph\";\n\nimport { findAllRoutes, getObjectKeyAsValue, transformRoutes } from \"./utils\";\nimport { adjacencyGraph, Stop, Route } from \"./constants\";\n\nconst matrix = require(\"./destinations.png\");\n\nexport type StopIsActive = {\n  [key in string]: boolean;\n};\n\ntype Active = {\n  start: StopIsActive;\n  end: StopIsActive;\n};\n\nexport interface IState {\n  routes: Route[];\n  fastest: Route;\n  active: Active;\n  toolTip: StopIsActive;\n}\n\nclass App extends Component<{}, IState> {\n  state = {\n    routes: [],\n    fastest: [],\n    active: {\n      start: { A: true },\n      end: { E: true }\n    },\n    toolTip: { A: false }\n  };\n\n  componentDidMount() {\n    this.updateRoutes();\n  }\n\n  onClickRouteEnd = (\n    e: React.MouseEvent<HTMLSpanElement>,\n    stop: Stop,\n    position: string\n  ) => {\n    e.persist();\n\n    this.setState(\n      (prevState: IState) => ({\n        active: {\n          ...prevState.active,\n          [position]: { [stop]: true }\n        }\n      }),\n      () => this.updateRoutes()\n    );\n  };\n\n  updateRoutes = () => {\n    const {\n      active: { start, end }\n    } = this.state;\n\n    const routesRaw = findAllRoutes(\n      adjacencyGraph,\n      getObjectKeyAsValue(start) as Stop,\n      getObjectKeyAsValue(end) as Stop\n    ) as Route[];\n\n    this.setState({ routes: transformRoutes(routesRaw) }, () =>\n      this.getFastestRoute()\n    );\n  };\n\n  getFastestRoute = () =>\n    this.setState(prevState => ({ fastest: prevState.routes[0] }));\n\n  toggleToolTip = (e: React.MouseEvent<HTMLSpanElement>, stop: Stop) => {\n    e.preventDefault();\n\n    this.setState({\n      toolTip: {\n        [stop]: !R.prop((stop as unknown) as R.Placeholder, this.state.toolTip)\n      }\n    });\n  };\n\n  render() {\n    const { active, fastest, toolTip, routes } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div style={{ height: \"150px\", marginBottom: \"5em\" }}>\n          <h3>\n            Find the shortest distance between any direction, any stop using any\n            combination possible\n          </h3>\n          <img\n            src={matrix}\n            style={{ width: \"100%\", maxWidth: \"450px\" }}\n            alt=\"table of destinations and distances\"\n          />\n        </div>\n\n        <RouteList routes={routes} />\n\n        <RouteGraph\n          active={active}\n          fastest={fastest}\n          toggleToolTip={this.toggleToolTip}\n          onClickRouteEnd={this.onClickRouteEnd}\n          toolTip={toolTip}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nimport { ClickHandleT, ItemT } from \"../../types\";\nimport \"./styles.css\";\n\ntype ItemProps = {\n  item: ItemT;\n  addItemOnClick: ClickHandleT[\"addItemOnClick\"];\n  removeItemOnClick: ClickHandleT[\"removeItemOnClick\"];\n  index?: number;\n};\n\nconst Item: React.SFC<ItemProps> = ({\n  item,\n  addItemOnClick,\n  removeItemOnClick,\n  index\n}: ItemProps) => (\n  <li\n    className=\"shopping-list__item\"\n    onClick={() =>\n      (index as number) > -1\n        ? removeItemOnClick((index = 0))\n        : (addItemOnClick(item) as void)\n    }\n  >\n    {item.name}\n    <span>{item.price}</span>\n  </li>\n);\n\nexport default Item;\n","import React from \"react\";\n\nimport Item from \"../Item\";\nimport { ClickHandleT, ItemT } from \"../../types\";\nimport \"./styles.css\";\n\ntype ShopListProps = {\n  foodItems: ItemT[];\n  addItemOnClick: ClickHandleT[\"addItemOnClick\"];\n};\n\nconst ShopList: React.SFC<ShopListProps> = ({\n  foodItems,\n  addItemOnClick\n}: ShopListProps) => (\n  <ul className=\"shopping-list\">\n    <h3>Items</h3>\n\n    {foodItems.map((item: ItemT) => (\n      <Item\n        key={item.id}\n        item={item}\n        addItemOnClick={addItemOnClick}\n        removeItemOnClick={() => \"noop\"}\n        index={-1}\n      />\n    ))}\n  </ul>\n);\n\n// Memo stops ShopList re-rendering after initial load. This is a static list\nexport default React.memo(ShopList);\n","import React from \"react\";\n\nimport { ClickHandleT, ItemT } from \"../../types\";\nimport Item from \"../Item\";\n\ntype BasketProps = {\n  basketList: ItemT[];\n  removeItemOnClick: ClickHandleT[\"removeItemOnClick\"];\n};\n\nconst Basket: React.SFC<BasketProps> = ({\n  basketList,\n  removeItemOnClick\n}: BasketProps) => (\n  <div className=\"basket\">\n    <h3>Shopping Cart</h3>\n\n    {basketList.map((item: ItemT, i: number) => (\n      <Item\n        key={i}\n        index={i}\n        item={item}\n        removeItemOnClick={removeItemOnClick}\n        addItemOnClick={() => \"noop\"}\n      />\n    ))}\n  </div>\n);\n\n// Memo stops basket re-rendering on each add or remove\nexport default React.memo(Basket);\n","import React from \"react\";\n\nimport { RateT } from \"../../types\";\n\ntype SelectProps = {\n  value: string | undefined;\n  options: RateT[];\n  handleOnChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nconst Select: React.SFC<SelectProps> = ({\n  value,\n  options,\n  handleOnChange\n}: SelectProps) => (\n  <select onChange={e => handleOnChange(e)}>\n    <option value={value}>{value}</option>\n\n    {options.map((item: RateT, i) => (\n      <option key={i} value={item.country}>\n        {item.country}\n      </option>\n    ))}\n  </select>\n);\n\nexport default Select;\n","import React from \"react\";\n\nimport { RateT } from \"../../types\";\nimport Select from \"../Select\";\n\nimport \"./styles.css\";\n\ntype PriceAreaProps = {\n  totalIncRate: number;\n  base: string;\n  allCurrencies: RateT[];\n  updateCurrency: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nconst PriceArea: React.SFC<PriceAreaProps> = ({\n  totalIncRate,\n  base,\n  allCurrencies,\n  updateCurrency\n}: PriceAreaProps) => (\n  <div className=\"total\">\n    <div className=\"segment\">\n      <h3>\n        <Select\n          value={base}\n          options={allCurrencies}\n          handleOnChange={updateCurrency}\n        />\n        {totalIncRate} {base}\n      </h3>\n    </div>\n  </div>\n);\n\nexport default PriceArea;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  addItemOnClick,\n  removeItemOnClick,\n  handleCheckout,\n  updateCurrency\n} from \"./actions\";\nimport ShopList from \"./components/ShopList\";\nimport Basket from \"./components/Basket\";\nimport PriceArea from \"./components/Price\";\n\nimport { roundToTwo } from \"./utils\";\nimport { IApp, IState, ItemT } from \"./types\";\n\n// From service / backend\nexport const foodItems: ItemT[] = [\n  { id: 1, name: \"Peas\", price: \"0.95\" },\n  { id: 2, name: \"Eggs\", price: \"2.10\" },\n  { id: 3, name: \"Milk\", price: \"1.30\" },\n  { id: 4, name: \"Beans\", price: \"0.73\" }\n];\n\nconst App = ({\n  basketList,\n  rate,\n  total,\n  allCurrencies,\n  addItemOnClickFn,\n  removeItemOnClickFn,\n  handleCheckoutFn,\n  updateCurrencyFn\n}: IApp) => {\n  useEffect(() => {\n    handleCheckoutFn();\n  }, [basketList, handleCheckoutFn]);\n\n  return (\n    <div className=\"App\">\n      <ShopList foodItems={foodItems} addItemOnClick={addItemOnClickFn} />\n\n      <Basket basketList={basketList} removeItemOnClick={removeItemOnClickFn} />\n\n      <PriceArea\n        base={rate.country}\n        totalIncRate={roundToTwo(total * ((rate.amount as any) as number))}\n        allCurrencies={allCurrencies}\n        updateCurrency={updateCurrencyFn}\n      />\n    </div>\n  );\n};\n\nexport default connect(\n  ({ total, rate, basketList, allCurrencies }: IState) => ({\n    total,\n    rate,\n    basketList,\n    allCurrencies\n  }),\n  dispatch => ({\n    addItemOnClickFn: (item: ItemT) => dispatch(addItemOnClick(item)),\n    removeItemOnClickFn: (index: number) => dispatch(removeItemOnClick(index)),\n    handleCheckoutFn: () => dispatch(handleCheckout()),\n    updateCurrencyFn: (event: React.ChangeEvent<HTMLSelectElement>) =>\n      dispatch(updateCurrency(event))\n  })\n)(App);\n","import { range } from \"d3-array\";\nimport { scaleQuantile } from \"d3-scale\";\n\nexport function updatePercentiles(featureCollection, accessor) {\n  const { features } = featureCollection;\n\n  const scale = scaleQuantile()\n    .domain(features.map(accessor))\n    .range(range(9));\n  return {\n    type: \"FeatureCollection\",\n    features: features.map(f => {\n      const value = accessor(f);\n      const properties = {\n        ...f.properties,\n        value,\n        percentile: scale(value)\n      };\n      return { ...f, properties };\n    })\n  };\n}\n","import React, { Component } from \"react\";\nimport ReactMapGL, { Source, Layer } from \"react-map-gl\";\nimport { json as requestJson } from \"d3-request\";\n\nimport { updatePercentiles } from \"./utils\";\n\nconst dataLayer = {\n  id: \"data\",\n  type: \"fill\",\n  paint: {\n    \"fill-color\": {\n      property: \"percentile\",\n      stops: [\n        [0, \"#3288bd\"],\n        [1, \"#66c2a5\"],\n        [2, \"#abdda4\"],\n        [3, \"#e6f598\"],\n        [4, \"#ffffbf\"],\n        [5, \"#fee08b\"],\n        [6, \"#fdae61\"],\n        [7, \"#f46d43\"],\n        [8, \"#d53e4f\"]\n      ]\n    },\n    \"fill-opacity\": 0.8\n  }\n};\n\nexport default class App extends Component {\n  state = {\n    year: 2015,\n    data: null,\n    hoveredFeature: null,\n    viewport: {\n      latitude: 40,\n      longitude: -100,\n      zoom: 2,\n      bearing: 0,\n      pitch: 0\n    }\n  };\n\n  componentDidMount() {\n    requestJson(\n      \"https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/us-income.geojson\",\n      (error, response) => {\n        if (!error) {\n          this._loadData(response);\n        }\n      }\n    );\n  }\n\n  _loadData = data => {\n    this.setState({\n      data: updatePercentiles(data, f => f.properties.income[this.state.year])\n    });\n  };\n\n  _updateSettings = (name, value) => {\n    if (name === \"year\") {\n      this.setState({ year: value });\n\n      const { data } = this.state;\n      if (data) {\n        // trigger update\n        this.setState({\n          data: updatePercentiles(data, f => f.properties.income[value])\n        });\n      }\n    }\n  };\n\n  _onViewportChange = viewport => this.setState({ viewport });\n\n  _onHover = event => {\n    const {\n      features,\n      srcEvent: { offsetX, offsetY }\n    } = event;\n    const hoveredFeature =\n      features && features.find(f => f.layer.id === \"data\");\n\n    this.setState({ hoveredFeature, x: offsetX, y: offsetY });\n  };\n\n  _renderTooltip() {\n    const { hoveredFeature, x, y } = this.state;\n\n    return (\n      hoveredFeature && (\n        <div className=\"tooltip\" style={{ left: x, top: y }}>\n          <div>State: {hoveredFeature.properties.name}</div>\n          <div>Median Household Income: {hoveredFeature.properties.value}</div>\n          <div>\n            Percentile: {(hoveredFeature.properties.percentile / 8) * 100}\n          </div>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    const { viewport, data } = this.state;\n\n    return (\n      <>\n        <div\n          style={{\n            height: \"auto\",\n            right: 0,\n            position: \"absolute\",\n            zIndex: 99,\n            textAlign: \"center\",\n            width: \"50%\",\n            padding: \"1rem\",\n            background: \"white\"\n          }}\n        >\n          Copied from https://uber.github.io/react-map-gl/examples/geojson. TODO\n          - expand and use own sourced data for example, uk crime, uk flood,\n          cornovirus, etc.\n        </div>\n        <div style={{ height: \"100%\", position: \"relative\" }}>\n          <ReactMapGL\n            {...viewport}\n            width=\"100%\"\n            height=\"100%\"\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            onViewportChange={this._onViewportChange}\n            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n            onHover={this._onHover}\n          >\n            <Source type=\"geojson\" data={data}>\n              <Layer {...dataLayer} />\n            </Source>\n            {this._renderTooltip()}\n          </ReactMapGL>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { usePosition, Position } from \"./usePosition\";\nimport { getSunriseSunset } from \"./utils\";\n\nconst App = () => {\n  const { error, ...position } = usePosition();\n  const { latitude, longitude } = (position as unknown) as Position;\n  const { sunrise, sunset } = getSunriseSunset(latitude, longitude);\n\n  return (\n    <div style={{ padding: \"2em\" }}>\n      {error && <p>Please allow browser to find your geoLocation</p>}\n      {!latitude && !longitude ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <p>{`User Location: ${latitude.toFixed(4)},\n          ${longitude.toFixed(4)}`}</p>\n          <p>{`Sunrise: ${sunrise}`}</p>\n          <p>{`SunSet: ${sunset}`}</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\ntype ErrorMsg = {\n  message: string;\n};\n\nexport type Position = {\n  latitude: number;\n  longitude: number;\n};\n\nexport type Coords = {\n  coords: Position;\n};\n\nexport const usePosition = () => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(\"\");\n\n  const onChange = ({ coords }: Coords) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude\n    });\n  };\n\n  const onError = (error: ErrorMsg) => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    const geo = navigator.geolocation;\n    if (!geo) {\n      setError(\"Geolocation is not supported\");\n      return;\n    }\n\n    let watcher: number | null = null;\n    watcher = geo.watchPosition(onChange, onError);\n\n    return () => geo.clearWatch(watcher as number);\n  }, []);\n\n  return { ...position, error, onError, onChange };\n};\n","import SunCalc from \"suncalc\";\n\nexport const getSunriseSunset = (latitude: number, longitude: number) =>\n  SunCalc.getTimes(new Date(), latitude, longitude);\n","import React from \"react\";\n\nconst Input = ({ name, type, value, onChange, validation }) => (\n  <div>\n    <label htmlFor={name}>{name}</label>\n\n    <input\n      type={type}\n      name={name}\n      id={name}\n      value={value}\n      onChange={onChange}\n    />\n\n    {validation && validation}\n  </div>\n);\n\nexport default Input;\n","import React from \"react\";\n\nconst Error = ({ message }) => <span>{message ? message : \"\"}</span>;\n\nexport default Error;\n","// Refactor(?) this to be more like\n\nconst formData = {\n  values: {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    newsletter: false\n  },\n  errors: {},\n  meta: {\n    isSubmitting: false,\n    submitMessage: \"\"\n  }\n};\n\nconst ERROR = {\n  TEXT_FIELD_EMPTY: \"Please fill all text field\",\n  EMAIL_INVALID: \"Invalid email address\",\n  SUBMIT: \"Please check all fields correct\"\n};\n\nconst FIELD = {\n  NAME: \"name\",\n  EMAIL: \"email\",\n  MESSAGE: \"message\",\n  NEWSLETTER: \"newsletter\"\n};\n\nconst SENDING = \"Sending...\";\n\nexport { formData, ERROR, FIELD, SENDING };\n","import validator from \"validator\";\n\nimport { ERROR, FIELD } from \"../constants\";\n\nexport const isNewsletterField = inputName => inputName === FIELD.NEWSLETTER;\n\nexport const getValue = eventTarget =>\n  eventTarget.type === \"checkbox\" ? eventTarget.checked : eventTarget.value;\n\nexport const getError = eventTarget => {\n  switch (eventTarget.name) {\n    case FIELD.NAME:\n    case FIELD.MESSAGE:\n      return validator.isEmpty(eventTarget.value) ? ERROR.TEXT_FIELD_EMPTY : \"\";\n    case FIELD.EMAIL:\n      return !validator.isEmail(eventTarget.value) ? ERROR.EMAIL_INVALID : \"\";\n    default:\n      return \"\";\n  }\n};\n\nconst everyPropertyNotEmpty = object =>\n  Object.values(object).every(o => o !== \"\");\n\nconst everyPropertyIsEmpty = object =>\n  Object.values(object).every(o => o === \"\");\n\nexport const validate = obj => {\n  if (everyPropertyNotEmpty(obj.values) && everyPropertyIsEmpty(obj.errors))\n    return [];\n\n  return [obj.errors];\n};\n","import { useState, useEffect } from \"react\";\n\nimport { getError, getValue } from \"../utils\";\nimport { formData } from \"../constants\";\n\nconst useForm = (validate, callback) => {\n  const [state, setState] = useState(formData);\n\n  // These local error states are here to isolate when useEffect is called within the hook just before we submit\n  const [localErrors, setLocalErrors] = useState([]);\n\n  // This allows us to check validation, fire notices, etc right before we make a request\n  // by passing and exec callback under these conditions\n  useEffect(() => {\n    if (Object.keys(localErrors).length === 0 && state.meta.isSubmitting) {\n      setState(prevState => ({\n        ...prevState,\n        meta: {\n          ...prevState.meta,\n          submitMessage: \"Sending...\"\n        }\n      }));\n      callback(state.values);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [localErrors]);\n\n  const handleOnChange = event => {\n    event.persist();\n    const target = event.target;\n\n    setState(prevState => ({\n      ...prevState,\n      values: {\n        ...prevState.values,\n        [target.name]: getValue(target)\n      },\n      errors: {\n        ...prevState.errors,\n        [target.name]: getError(target)\n      }\n    }));\n  };\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setLocalErrors(validate(state));\n\n    setState(prevState => ({\n      ...prevState,\n      meta: {\n        ...prevState.meta,\n        isSubmitting: true\n      }\n    }));\n  };\n\n  return {\n    state,\n    handleSubmit,\n    handleOnChange\n  };\n};\n\nexport default useForm;\n","import React from \"react\";\n\n// Components\nimport Input from \"./input\";\nimport Error from \"./error\";\n\n// Hooks\nimport useForm from \"./useForm\";\n\n// Utils\nimport { isNewsletterField, validate } from \"./utils\";\n\nconst App = () => {\n  const callbackSendUserForm = async values => {\n    await fetch(\"/contact-form\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ post: values })\n    });\n\n    console.info(\"no errors, user details posting...\");\n  };\n\n  const { state, handleOnChange, handleSubmit } = useForm(\n    validate,\n    callbackSendUserForm\n  );\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <p>\n          <strong>Tasty Treats Customer form:</strong>\n        </p>\n\n        {Object.keys(state.values).map(inputName => (\n          <Input\n            key={inputName}\n            name={inputName}\n            type={isNewsletterField(inputName) ? \"checkbox\" : \"text\"}\n            value={state.values[inputName]}\n            onChange={handleOnChange}\n            validation={\n              !isNewsletterField(inputName) && (\n                <Error message={state.errors[inputName] || \"\"} />\n              )\n            }\n          />\n        ))}\n\n        <p>{state.meta.submitMessage}</p>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      <a\n        style={{ display: \"block\", marginTop: \"2em\" }}\n        href={process.env.PUBLIC_URL + \"/userList.txt\"}\n      >\n        Go to Saved User List file\n      </a>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 250,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  beerImg: {\n    maxHeight: \"120px\"\n  }\n}));\n\nconst SimpleModal = ({ beer, open, handleClose, addToCart }) => {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n\n  if (!beer) return null;\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <h2 id=\"simple-modal-title\">{beer.name}</h2>\n        <p id=\"simple-modal-description\">\n          <img\n            className={classes.beerImg}\n            src={beer.image_url}\n            alt={beer.description}\n          />\n          {beer.tagline}\n          {beer.abv}\n          {beer.description}\n          {beer.food_pairing}\n        </p>\n        <button type=\"button\" onClick={e => addToCart(e, beer)}>\n          Add to Cart\n        </button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default SimpleModal;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\n\nconst useStyles = makeStyles({\n  shoppingTab: {\n    position: \"fixed\",\n    bottom: 0,\n    width: \"100%\",\n    textAlign: \"center\",\n    background: \"grey\"\n  }\n});\n\nconst ShoppingDrawer = ({ items, removeFromCart }) => {\n  const classes = useStyles();\n  const [state, setState] = useState(false);\n\n  const toggleDrawer = open => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState(open);\n  };\n\n  return (\n    <div>\n      <Button className={classes.shoppingTab} onClick={toggleDrawer(true)}>\n        Shopping Cart\n      </Button>\n      <Drawer anchor={\"bottom\"} open={state} onClose={toggleDrawer(false)}>\n        <List>\n          {items.map((item, index) => (\n            <div key={index}>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar alt={item.name} src={item.image_url} />\n                </ListItemAvatar>\n                <ListItemText primary={item.name} />\n                <DeleteOutlineOutlinedIcon\n                  onClick={e => removeFromCart(e, item.id)}\n                />\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </div>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default ShoppingDrawer;\n","import React from \"react\";\n\n// MUI components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LocalCafeOutlinedIcon from \"@material-ui/icons/LocalCafeOutlined\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  loader: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"200px\"\n  },\n  item: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    borderRadius: \"4px\",\n    border: \"1px solid lightgray\"\n  },\n  beerImgWrapper: {\n    height: \"120px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  beerImg: {\n    maxHeight: \"100%\"\n  }\n}));\n\nconst GridList = ({ beerList, index, handleOpen, isLoading }) => {\n  const classes = useStyles();\n\n  if (isLoading)\n    return (\n      <div className={classes.loader}>\n        <CircularProgress />\n      </div>\n    );\n\n  return (\n    <Grid\n      container\n      spacing={1}\n      style={{\n        margin: 0,\n        width: \"100%\"\n      }}\n    >\n      {beerList.map(beer => (\n        <Grid key={beer.id} item xs={4}>\n          <Box className={classes.item} onClick={e => handleOpen(e, beer)}>\n            <div className={classes.beerImgWrapper}>\n              {beer.image_url ? (\n                <img\n                  className={classes.beerImg}\n                  src={beer.image_url}\n                  alt={beer.name}\n                />\n              ) : (\n                <LocalCafeOutlinedIcon fontSize=\"large\" />\n              )}\n            </div>\n            <div>{beer.name}</div>\n            <div>ABV: {beer.abv}%</div>\n          </Box>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default GridList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport wait from \"waait\";\n\n// MUI components\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport SwipeableViews from \"react-swipeable-views\";\n\n// MUI icons components\nimport RestaurantOutlinedIcon from \"@material-ui/icons/RestaurantOutlined\";\nimport LocalCafeOutlinedIcon from \"@material-ui/icons/LocalCafeOutlined\";\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\n\n// Local components\nimport SimpleModal from \"./Modal\";\nimport ShoppingDrawer from \"./ShoppingDrawer\";\nimport GridList from \"./GridList\";\n\n// const CATEGORY_TABS = { 0: \"Drink\", 1: \"Food\", 2: \"Setting\", 3: \"Search\" };\nconst DRINK_TABS = { 0: \"All\", 1: \"Pizza\", 2: \"Steak\" };\nconst ITEM_PER_PAGE = 9;\n\nconst getTabNameFromTabIndex = (index) => DRINK_TABS[index];\n\nconst getTabIndices = (tabs) => Object.keys(tabs);\n\nconst BeerApp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  // const [isMobile, setIsMobile] = useState(false);\n  const [page, setPage] = useState(1);\n  const gridRef = useRef(null);\n\n  const [beerList, setBeerList] = useState([]);\n  const [foodTab, setFoodTab] = useState(\"All\");\n\n  // Drinks Tab\n  const [index, setIndex] = useState(0);\n  const handleChange = (e, index) => setIndex(index);\n  const handleSwipeChange = (index) => setIndex(index);\n\n  // Parent Tab\n  const [mainTabIndex, setMainTabIndex] = useState(0);\n  const handleMainTabSwipeChange = (index) => setMainTabIndex(index);\n  const handleMainTabChange = (e, index) => setMainTabIndex(index);\n\n  // Modal\n  const [showBeer, setShowBeer] = useState({ open: false });\n  const handleOpen = (e, beer) => setShowBeer({ ...beer, open: true });\n  const handleClose = (beer) => setShowBeer({ ...beer, open: false });\n\n  // Shopping cart\n  const [shoppingItems, setShoppingItems] = useState([]);\n  const addToCart = (e, item) => {\n    setShoppingItems([...shoppingItems, item]);\n    handleClose(item);\n  };\n  const removeFromCart = (e, id) => {\n    const newItems = shoppingItems.filter((item) => item.id !== id);\n    setShoppingItems(newItems);\n  };\n\n  // Checks if user is on mobile/tablet and suggests to toggle view to see swipeable stuff\n  // useEffect(() => {\n  //   const isMobileDevice = () => {\n  //     if (\n  //       typeof window.orientation !== \"undefined\" ||\n  //       navigator.userAgent.indexOf(\"IEMobile\") !== -1\n  //     ) {\n  //       setIsMobile(true);\n  //     }\n  //   };\n  //   isMobileDevice();\n  // }, []);\n\n  // This ensures we're back at page 1 in the API call when we change tabs\n  useEffect(() => {\n    setFoodTab(getTabNameFromTabIndex(index));\n    setPage(1);\n  }, [index]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      try {\n        setIsLoading(true);\n        await wait(200);\n        const res = await fetch(\n          `https://api.punkapi.com/v2/beers?page=${page}&per_page=${ITEM_PER_PAGE}${foodTab &&\n            `&food=${foodTab.toLowerCase()}`}`\n        );\n\n        const response = await res.json();\n        setBeerList(response);\n\n        setIsLoading(false);\n      } catch (e) {\n        console.error(\"Error fetching API\", e);\n      }\n    };\n    fetchApi();\n  }, [foodTab, page]);\n\n  // if (!isMobile) // TODO - modal to nudge mobile view for this demo\n  //   return (\n  //     <div\n  //       style={{\n  //         display: \"flex\",\n  //         aligIitems: \"center\",\n  //         justifyContent: \"center\",\n  //         alignItems: \"center\",\n  //         height: \"90vh\",\n  //         margin: \"5vw\",\n  //         background: \"pink\",\n  //       }}\n  //     >\n  //       Please toggle in chrome or view on mobile for swipeable features\n  //     </div>\n  //   );\n\n  return (\n    <div>\n      <Tabs\n        value={mainTabIndex}\n        fullwidth=\"true\"\n        onChange={handleMainTabChange}\n        centered\n      >\n        <Tab icon={<LocalCafeOutlinedIcon />} aria-label=\"drink\" />\n        <Tab icon={<RestaurantOutlinedIcon />} aria-label=\"food\" />\n        <Tab icon={<SettingsOutlinedIcon />} aria-label=\"settings\" />\n        <Tab icon={<SearchOutlinedIcon />} aria-label=\"search\" />\n      </Tabs>\n\n      <SwipeableViews\n        index={mainTabIndex}\n        onChangeIndex={handleMainTabSwipeChange}\n      >\n        <div style={{ height: \"700px\" }} ref={gridRef}>\n          <Tabs value={index} fullwidth=\"true\" onChange={handleChange} centered>\n            {getTabIndices(DRINK_TABS).map((key) => (\n              <Tab key={key} label={getTabNameFromTabIndex(key)} />\n            ))}\n          </Tabs>\n\n          <SwipeableViews index={index} onChangeIndex={handleSwipeChange}>\n            {getTabIndices(DRINK_TABS).map((index) => (\n              <GridList\n                key={index}\n                index={index}\n                isLoading={isLoading}\n                beerList={beerList}\n                handleOpen={handleOpen}\n              />\n            ))}\n          </SwipeableViews>\n        </div>\n        <>\n          <Tabs value={0} fullwidth=\"true\" onChange={() => null} centered>\n            <Tab label=\"All food\" />\n          </Tabs>\n\n          <p>Other stuff in here</p>\n        </>\n      </SwipeableViews>\n\n      <SimpleModal\n        beer={showBeer}\n        open={showBeer.open}\n        handleClose={handleClose}\n        addToCart={addToCart}\n      />\n\n      <ShoppingDrawer\n        items={shoppingItems || []}\n        removeFromCart={removeFromCart}\n      />\n    </div>\n  );\n};\n\nexport default BeerApp;\n","import React from \"react\";\n\nconst Index = () => (\n  <div className=\"index--centre\">Blank page flex centred</div>\n);\n\nexport default Index;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional infoging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.info(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route } from \"react-router\";\nimport { HashRouter as Router, Link, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\n\nimport \"./index.css\";\nimport store from \"./pages/ShoppingList/store\";\n\n// Common components\nimport PageTransition from \"./components/PageTransition\";\nimport HolyGrailLayout, {\n  HolyGrailSide,\n  HolyGrailMain,\n} from \"./components/HolyGrailLayout\";\n\n// Pages/Routes\nimport MovieList from \"./pages/MovieList\";\nimport ShortestRoute from \"./pages/ShortestRoute\";\nimport ShoppingList from \"./pages/ShoppingList\";\n// import WebworkerExport from \"./pages/WebworkerExport\";\nimport Mapbox from \"./pages/Mapbox\";\nimport SunriseSunset from \"./pages/SunriseSunset\";\nimport SimpleExpressForm from \"./pages/SimpleExpressForm\";\nimport MobileBeerApp from \"./pages/MobileBeerApp\";\nimport Home from \"./pages/index\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst transitionClassName = \"slide\";\nconst duration = 300;\n\nconst titles = [\n  \"Index\",\n  \"Shopping List\",\n  \"Mobile Beer App\",\n  \"Shortest Route\",\n  \"Movie List\",\n  // \"Webworker Export\",\n  \"MapBox\",\n  \"Sunrise Sunset\",\n  \"Simple Express Form\",\n];\n\nconst makeRoute = (title) => {\n  if (title === \"Index\") return \"/\";\n  return `/${title.replace(/\\s+/g, \"-\").toLowerCase()}`;\n};\n\nconst Index = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <HolyGrailLayout>\n          <HolyGrailSide>\n            <div className=\"nav\">\n              {titles.map((title) => (\n                <Link key={`${makeRoute(title)}`} to={`${makeRoute(title)}`}>\n                  {title}\n                </Link>\n              ))}\n            </div>\n          </HolyGrailSide>\n          <HolyGrailMain>\n            <Route\n              render={({ location }) => (\n                <PageTransition\n                  // location.key isnt available for hasHistory but we'll use hash for now for\n                  // github pages where this is hosted. Once express is configure to serve,\n                  // switch back to browserRouter\n                  pageKey={nanoid()} // location.key\n                  classNames={transitionClassName}\n                  timeout={duration}\n                >\n                  <Switch location={location}>\n                    <Route exact path={`/`} component={Home} />\n                    <Route\n                      path={`/mobile-beer-app`}\n                      component={MobileBeerApp}\n                    />\n                    <Route path={`/shopping-list`} component={ShoppingList} />\n                    <Route path={`/shortest-route`} component={ShortestRoute} />\n                    <Route path={`/movie-list`} component={MovieList} />\n                    {/* <Route\n                      path={`/webworker-export`}\n                      component={WebworkerExport}\n                    /> */}\n                    <Route path={`/mapbox`} component={Mapbox} />\n                    <Route path={`/sunrise-sunset`} component={SunriseSunset} />\n                    <Route\n                      path={`/simple-express-form`}\n                      component={SimpleExpressForm}\n                    />\n                  </Switch>\n                </PageTransition>\n              )}\n            />\n          </HolyGrailMain>\n        </HolyGrailLayout>\n      </Router>\n    </Provider>\n  );\n};\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}